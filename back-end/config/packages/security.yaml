security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: argon2id
            time_cost: 3
            memory_cost: 65536

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email

    firewalls:
        login:
            pattern: ^/api/login$
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: App\Security\JwtCookieAuthenticationSuccessHandler
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        #  CE FIREWALL Gére le REFRESH (AVANT api)
        refresh:
            pattern: ^/api/token/refresh$
            stateless: true
            security: false

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

    access_control:
        - { path: ^/api/login$, roles: PUBLIC_ACCESS }
        - { path: ^/api/token/refresh$, roles: PUBLIC_ACCESS }

        - { path: ^/api/utilisateurs, roles: ROLE_ADMIN }

    
        - { path: ^/api/chambres, roles: [ROLE_ADMIN, ROLE_RECEPTIONNISTE] }
        - { path: ^/api/clients, roles: [ROLE_ADMIN, ROLE_RECEPTIONNISTE] }
        - { path: ^/api/reservations, roles: [ROLE_ADMIN, ROLE_RECEPTIONNISTE] }
        - { path: ^/api/paiements, roles: [ROLE_ADMIN, ROLE_RECEPTIONNISTE] }
        - { path: ^/api/services, roles: [ROLE_ADMIN, ROLE_RECEPTIONNISTE] }

        # DEFAULT: toute autre route nécessite une authentification
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN: [ROLE_RECEPTIONNISTE]